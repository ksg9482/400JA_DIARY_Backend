{
  "name": "400ja_diary_backend",
  "version": "1.0.0",
  "description": "## 기획 하루 400자, 가볍게 일기를 쓰는 웹 어플리케이션입니다.    다양한 일기 웹/ 앱이 있지만 있는걸 그냥 사용하는 것 보다는 직접 만들어 보면서 필요한 기능을 구현하자는 생각에 기획하게 되었습니다. 처음에는 단순한 기능만 넣어서 개발할 생각이며 이는 새로운 기술 스택이 여러개 추가되는데 괜히 처음부터 대규모로 만들면 오류만 커진다고 판단했기 때문입니다. ### 요건 * 최대한 클린코드를 준수한다 * 사용자 페이지와 관리자 페이지 구분/구현 * 코드 재사용성을 높이기 위한 고려 ## 기술 스택 * Node.Js   * Javascript를 웹환경이 아닌 상황에서도 동작시키기 위한 런타임입니다. * Express   * NestJs도 있지만 npm을 직접 선택하면서 필요한 기능을 하나하나 살펴보기 위해 일부러 Express를 선택했다. * mongoDB   * 자신의 게시물을 타인이 간섭하지 않는다. 따라서 데이터 일관성이 그렇게 중요하지 않고 또 여러번의 조인 연산이 필요하지 않기 때문에 NoSQL을 사용하는 것도 적합하다고 생각해서 선택했다. * Nginx   * 정적 파일 관리 및 담당을 통해 서버의 부담 경감   * 동작을 담당하는 서버를 보호 * Docker   * 백엔드 환경 균일화   * 클러스터 형식으로 조절   * PM2 활용 * Jest   * e2e test   * unit test ## 페이지 구성 * 인트로 / 로그인 페이지   * 일반 회원가입, Oauth(네이버, 구글, 카카오) * 메인페이지 - 오늘 일기 * 일기 모아보기   * 작성시간 기준 역순   * 무한 스크롤, 갯수별로 보기 - 여차하면 갯수별 보기로 고정(페이지네이션) * 검색 - 제목 검색, 내용 검색, 종합 검색, 태그 검색 * 마이페이지   * 공통 - 등록된 이메일, 로그아웃, 회원탈퇴, 일기 총 작성 횟수, 일기 연속 작성 횟수   * 일반회원 - 비밀번호 변경 가능   * 소셜로그인 - 비밀번호 변경 불가 * 네비게이션 바 - 오늘의 일기, 일기 모아보기, 검색, 마이페이지 ## 기능 구현 회원가입-로그인-소셜로그인-일기작성-일기확인-일기수정-일기검색-로그아웃-회원탈퇴",
  "main": "src/app.ts",
  "type": "module",
  "scripts": {
    "start": "nodemon",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ksg9482/400JA_DIARY_Backend.git"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/ksg9482/400JA_DIARY_Backend/issues"
  },
  "homepage": "https://github.com/ksg9482/400JA_DIARY_Backend#readme",
  "dependencies": {
    "body-parser": "^1.20.0",
    "cors": "^2.8.5",
    "dotenv": "^16.0.1",
    "express": "^4.18.1",
    "express-jwt": "^7.7.5",
    "jsonwebtoken": "^8.5.1"
  },
  "devDependencies": {
    "@types/express": "^4.17.13",
    "@types/jest": "^28.1.4",
    "@types/node": "^18.0.3",
    "jest": "^28.1.2",
    "nodemon": "^2.0.19",
    "ts-jest": "^28.0.5",
    "ts-node": "^10.8.2",
    "typescript": "^4.7.4"
  }
}
